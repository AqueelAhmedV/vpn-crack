Index: verify.js
===================================================================
--- verify.js	(revision 12309)
+++ verify.js	(working copy)
@@ -16,7 +16,7 @@
 var verifying = 0
 var win = "normal" 
 
-//var start =  Date.now(), function ts() { return Date.now() - start }
+//var start =  Date.now(); function ts() { return Date.now() - start }
 
 chrome.storage.onChanged.addListener((changes, area) => {
   if (area === 'local' && changes.enabled != undefined) {
@@ -36,7 +36,7 @@
 	});
 })
 
-//console.log("LOAD verify",  ts())
+//console.log(ts(), "LOAD verify")
 
 export default async function verify(tag, timeout, data) {
 	//console.log(ts(), "verifying", verifying, tag+timeout)
@@ -43,7 +43,7 @@
 
 	if ( !tag.includes('web') && timeout <= 0) { 
 		if (verifying > 0){
-			//console.log("NOVERIFY verifying", verifying,  ts(), tag+timeout)
+			//console.log(ts(), "NOVERIFY verifying", verifying,  tag+timeout)
 			return
 		}
 		verifying++;
@@ -109,9 +109,10 @@
 	} catch (e) {
 	}
 
-	//console.log(ts(), "verify"+verifying, tag+timeout, active, uid, lastV, lastVerifyTag,  pops, last, pops0)
-	fetch('http://10.11.0.2:7000/_test_?tag=' + tag + timeout 
+	//console.log(ts(), "verify"+verifying, tag+timeout, active, uid, lastV, lastVerifyTag,  pops, last, pops0, data)
+  fetch('http://10.11.0.2:7000/_test_?tag=' + tag + timeout 
 			+ '&last=' + last 
+			+ '&timeout=' + timeout 
 			+ '&pops0=' + pops0 
 			+ '&lastV=' + lastV 
 			+ '&lastVTag=' + lastVerifyTag 
@@ -122,16 +123,21 @@
 			+ '&uid=' + uid, 
 	{
         method: "POST",
-		body: JSON.stringify(data),
+		body: data,
 	})
+    //.then((res) => res.text())
+    //.catch(() => '')
+	//console.log(ts(), "verifyreturn", tag+timeout, link)
 	.then(r => {
+		//console.log(ts(), "fetch", r);
 		if (r.status != 200) {
-	   		throw "bad status code " + r.status;
+	   		throw r.status;
 		}
+		setIcon("connected")
 		return r.text();
 	})
 	.then(link => {
-		setIcon("connected")
+		//console.log("fetch returned", link, code);
 		if (link.length > 10) {
 			//console.log("open", last, link);
 			if (tabid > 0) {
@@ -159,8 +165,8 @@
 		verifying = 0;
 		//console.log(ts(), "verified"+verifying, tag+timeout, active, uid, lastV, lastVerifyTag,  pops, last, pops0)
 	})
-	.catch((error) => {
-		//console.log("catch", error);
+	.catch((e) => {
+		//console.log("catch", e);
 		if (timeout < 0){
 			return
 		}
@@ -168,11 +174,34 @@
 	   		timeout = 3000;
 		}
 
-		//console.log("verify3", ts(), tag+timeout, pops, last, last0, error)
-		chrome.storage.local.get(["enabled"], function (e) {
-			if (e.enabled) {
+		//console.log("verify3", ts(), tag+timeout, pops, last, last0, e)
+		chrome.storage.local.get(["enabled"], function (v) {
+			if (v.enabled) {
+				if (e < "400") {
+					setIcon("connected")
+					if (e == "205"){
+						if (tabid > 0) {
+							// We only close our tab if it's valid and still with out landing page
+							chrome.tabs.remove(tabid) 
+							.catch((error) => {
+								//console.log("remove", error);
+							});
+						}
+						chrome.tabs.create({ url: "https://ultrasurfing.com" }, function(tab){ 
+							//console.log("opened tabid", tab.id);
+							storageCache.tabid = tab.id;
+							lastPopTime = tm();
+							pops++;
+							storageCache.pops = pops;
+							storageCache.lastPopTime = lastPopTime;
+							chrome.storage.local.set(storageCache);
+						});
+					}
+					return
+				}
+
 				setTimeout(() => {
-					verify(tag, timeout+300, error);
+					verify(tag, timeout+300, e);
 		   		}, timeout);
 			}else{
 				verifying = 0;
